// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PCreg(	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
  input         clock,	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
                reset,	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
                io_bf_valid_out,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
                io_bf_ready_in,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
                io_br_bus_valid,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
  input  [31:0] io_br_bus_pc_target,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
  output [31:0] io_pc,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
                io_next_pc	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
);

  reg  [31:0] pc_reg;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
  wire [31:0] _next_pc_T = pc_reg + 32'h4;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25, :22:68
  always @(posedge clock) begin	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    if (reset)	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      pc_reg <= 32'h1BFFFFFC;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
    else if (io_bf_valid_out & io_bf_ready_in) begin	// src/main/scala/CPU/IFstage/PCreg.scala:23:26
      if (io_br_bus_valid)	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
        pc_reg <= io_br_bus_pc_target;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
      else	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
        pc_reg <= _next_pc_T;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25, :22:68
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        pc_reg = _RANDOM[/*Zero width*/ 1'b0];	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :21:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_pc = pc_reg;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :21:25
  assign io_next_pc = io_br_bus_valid ? io_br_bus_pc_target : _next_pc_T;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :22:{22,68}
endmodule

module IFtop(	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  input         clock,	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
                reset,	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  output        io_hand_shake_bf_ready_in,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input         io_hand_shake_bf_valid_out,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [31:0] io_hand_shake_bf_bus_out_pc,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_bf_bus_out_inst,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [1:0]  io_hand_shake_bf_bus_out_func_type,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [9:0]  io_hand_shake_bf_bus_out_op_type,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [63:0] io_hand_shake_bf_bus_out_src1,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_bf_bus_out_src2,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_bf_bus_out_imm,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input         io_hand_shake_bf_bus_out_rf_bus_valid,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [4:0]  io_hand_shake_bf_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [63:0] io_hand_shake_bf_bus_out_rf_bus_wdata,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_bf_bus_out_alu_result,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input         io_hand_shake_af_ready_in,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output        io_hand_shake_af_valid_out,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [31:0] io_hand_shake_af_bus_out_pc,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_af_bus_out_inst,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [1:0]  io_hand_shake_af_bus_out_func_type,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [9:0]  io_hand_shake_af_bus_out_op_type,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [63:0] io_hand_shake_af_bus_out_src1,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_af_bus_out_src2,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_af_bus_out_imm,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output        io_hand_shake_af_bus_out_rf_bus_valid,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [4:0]  io_hand_shake_af_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [63:0] io_hand_shake_af_bus_out_rf_bus_wdata,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_hand_shake_af_bus_out_alu_result,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input         io_br_bus_valid,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [31:0] io_br_bus_pc_target,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_inst_sram_rdata,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output        io_inst_sram_en,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [3:0]  io_inst_sram_we,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [31:0] io_inst_sram_addr,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                io_inst_sram_wdata	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
);

  reg  bus_valid;	// src/main/scala/CPU/Parameters/parameters.scala:34:28
  wire io_hand_shake_bf_ready_in_0 = ~bus_valid | io_hand_shake_af_ready_in;	// src/main/scala/CPU/Parameters/parameters.scala:34:28, :36:{23,30}
  always @(posedge clock) begin	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    if (reset)	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      bus_valid <= 1'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:34:28
    else if (io_hand_shake_bf_ready_in_0)	// src/main/scala/CPU/Parameters/parameters.scala:36:30
      bus_valid <= io_hand_shake_bf_valid_out;	// src/main/scala/CPU/Parameters/parameters.scala:34:28
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        bus_valid = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:34:28
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  PCreg pc_reg (	// src/main/scala/CPU/IFstage/IFtop.scala:34:24
    .clock               (clock),
    .reset               (reset),
    .io_bf_valid_out     (io_hand_shake_bf_valid_out),
    .io_bf_ready_in      (io_hand_shake_bf_ready_in_0),	// src/main/scala/CPU/Parameters/parameters.scala:36:30
    .io_br_bus_valid     (io_br_bus_valid),
    .io_br_bus_pc_target (io_br_bus_pc_target),
    .io_pc               (io_hand_shake_af_bus_out_pc),
    .io_next_pc          (io_inst_sram_addr)
  );
  assign io_hand_shake_bf_ready_in = io_hand_shake_bf_ready_in_0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:36:30
  assign io_hand_shake_af_valid_out = bus_valid;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:34:28
  assign io_hand_shake_af_bus_out_inst = io_inst_sram_rdata;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  assign io_hand_shake_af_bus_out_func_type = 2'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_op_type = 10'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_src1 = 64'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_src2 = 64'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_imm = 64'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_rf_bus_valid = 1'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  assign io_hand_shake_af_bus_out_rf_bus_waddr = 5'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_rf_bus_wdata = 64'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_hand_shake_af_bus_out_alu_result = 64'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
  assign io_inst_sram_en = io_hand_shake_bf_valid_out & io_hand_shake_bf_ready_in_0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:36:30, :41:27
  assign io_inst_sram_we = 4'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, :47:21
  assign io_inst_sram_wdata = 32'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, src/main/scala/CPU/Parameters/parameters.scala:33:40
endmodule

