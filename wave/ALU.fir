circuit ALU :
  module ALU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip instruction : UInt<32>, flip rj : UInt<64>, flip rk : UInt<64>, flip rd_in : UInt<64>, flip imm : UInt<64>, rd : UInt<64>}

    io.rd <= UInt<1>("h0") @[ALU.scala 25:11]
    node _T = and(io.instruction, UInt<29>("h1ffff000")) @[ALU.scala 27:26]
    node _T_1 = eq(UInt<18>("h20000"), _T) @[ALU.scala 27:26]
    when _T_1 : @[ALU.scala 27:37]
      node _io_rd_T = bits(io.rj, 31, 0) @[ALU.scala 28:36]
      node _io_rd_T_1 = bits(io.rk, 31, 0) @[ALU.scala 28:51]
      node _io_rd_T_2 = add(_io_rd_T, _io_rd_T_1) @[ALU.scala 28:44]
      node _io_rd_T_3 = tail(_io_rd_T_2, 1) @[ALU.scala 28:44]
      node _io_rd_fill_T = bits(_io_rd_T_3, 31, 31) @[Configs.scala 14:43]
      node _io_rd_fill_T_1 = bits(_io_rd_fill_T, 0, 0) @[Bitwise.scala 74:15]
      node io_rd_fill = mux(_io_rd_fill_T_1, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
      node _io_rd_T_4 = cat(io_rd_fill, _io_rd_T_3) @[Cat.scala 31:58]
      io.rd <= _io_rd_T_4 @[ALU.scala 28:15]
    else :
      node _T_2 = and(io.instruction, UInt<29>("h1ffff000")) @[ALU.scala 29:33]
      node _T_3 = eq(UInt<18>("h21000"), _T_2) @[ALU.scala 29:33]
      when _T_3 : @[ALU.scala 29:44]
        node _io_rd_T_5 = add(io.rj, io.rk) @[ALU.scala 30:24]
        node _io_rd_T_6 = tail(_io_rd_T_5, 1) @[ALU.scala 30:24]
        io.rd <= _io_rd_T_6 @[ALU.scala 30:15]
      else :
        node _T_4 = and(io.instruction, UInt<29>("h1ffff000")) @[ALU.scala 31:33]
        node _T_5 = eq(UInt<18>("h22000"), _T_4) @[ALU.scala 31:33]
        when _T_5 : @[ALU.scala 31:44]
          node _io_rd_T_7 = bits(io.rj, 31, 0) @[ALU.scala 32:36]
          node _io_rd_T_8 = bits(io.rk, 31, 0) @[ALU.scala 32:51]
          node _io_rd_T_9 = sub(_io_rd_T_7, _io_rd_T_8) @[ALU.scala 32:44]
          node _io_rd_T_10 = tail(_io_rd_T_9, 1) @[ALU.scala 32:44]
          node _io_rd_fill_T_2 = bits(_io_rd_T_10, 31, 31) @[Configs.scala 14:43]
          node _io_rd_fill_T_3 = bits(_io_rd_fill_T_2, 0, 0) @[Bitwise.scala 74:15]
          node io_rd_fill_1 = mux(_io_rd_fill_T_3, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
          node _io_rd_T_11 = cat(io_rd_fill_1, _io_rd_T_10) @[Cat.scala 31:58]
          io.rd <= _io_rd_T_11 @[ALU.scala 32:15]
        else :
          node _T_6 = and(io.instruction, UInt<29>("h1ffff000")) @[ALU.scala 33:33]
          node _T_7 = eq(UInt<18>("h23000"), _T_6) @[ALU.scala 33:33]
          when _T_7 : @[ALU.scala 33:44]
            node _io_rd_T_12 = sub(io.rj, io.rk) @[ALU.scala 34:24]
            node _io_rd_T_13 = tail(_io_rd_T_12, 1) @[ALU.scala 34:24]
            io.rd <= _io_rd_T_13 @[ALU.scala 34:15]
          else :
            node _T_8 = and(io.instruction, UInt<29>("h1ff80000")) @[ALU.scala 35:33]
            node _T_9 = eq(UInt<23>("h500000"), _T_8) @[ALU.scala 35:33]
            when _T_9 : @[ALU.scala 35:45]
              node _io_rd_T_14 = bits(io.rj, 31, 0) @[ALU.scala 36:36]
              node _io_rd_T_15 = bits(io.imm, 11, 0) @[ALU.scala 36:65]
              node _io_rd_fill_T_4 = bits(_io_rd_T_15, 11, 11) @[Configs.scala 14:43]
              node _io_rd_fill_T_5 = bits(_io_rd_fill_T_4, 0, 0) @[Bitwise.scala 74:15]
              node io_rd_fill_2 = mux(_io_rd_fill_T_5, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
              node _io_rd_T_16 = cat(io_rd_fill_2, _io_rd_T_15) @[Cat.scala 31:58]
              node _io_rd_T_17 = add(_io_rd_T_14, _io_rd_T_16) @[ALU.scala 36:44]
              node _io_rd_T_18 = tail(_io_rd_T_17, 1) @[ALU.scala 36:44]
              node _io_rd_fill_T_6 = bits(_io_rd_T_18, 31, 31) @[Configs.scala 14:43]
              node _io_rd_fill_T_7 = bits(_io_rd_fill_T_6, 0, 0) @[Bitwise.scala 74:15]
              node io_rd_fill_3 = mux(_io_rd_fill_T_7, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
              node _io_rd_T_19 = cat(io_rd_fill_3, _io_rd_T_18) @[Cat.scala 31:58]
              io.rd <= _io_rd_T_19 @[ALU.scala 36:15]
            else :
              node _T_10 = and(io.instruction, UInt<29>("h1ff80000")) @[ALU.scala 38:33]
              node _T_11 = eq(UInt<23>("h580000"), _T_10) @[ALU.scala 38:33]
              when _T_11 : @[ALU.scala 38:45]
                node _io_rd_T_20 = bits(io.imm, 11, 0) @[ALU.scala 39:45]
                node _io_rd_fill_T_8 = bits(_io_rd_T_20, 11, 11) @[Configs.scala 14:43]
                node _io_rd_fill_T_9 = bits(_io_rd_fill_T_8, 0, 0) @[Bitwise.scala 74:15]
                node io_rd_fill_4 = mux(_io_rd_fill_T_9, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 74:12]
                node _io_rd_T_21 = cat(io_rd_fill_4, _io_rd_T_20) @[Cat.scala 31:58]
                node _io_rd_T_22 = add(io.rj, _io_rd_T_21) @[ALU.scala 39:24]
                node _io_rd_T_23 = tail(_io_rd_T_22, 1) @[ALU.scala 39:24]
                io.rd <= _io_rd_T_23 @[ALU.scala 39:15]
              else :
                node _T_12 = and(io.instruction, UInt<29>("h1f800000")) @[ALU.scala 40:33]
                node _T_13 = eq(UInt<26>("h2000000"), _T_12) @[ALU.scala 40:33]
                when _T_13 : @[ALU.scala 40:48]
                  node _io_rd_T_24 = bits(io.imm, 15, 0) @[ALU.scala 41:49]
                  node _io_rd_T_25 = mux(UInt<1>("h0"), UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 74:12]
                  node _io_rd_T_26 = cat(_io_rd_T_24, _io_rd_T_25) @[Cat.scala 31:58]
                  node _io_rd_fill_T_10 = bits(_io_rd_T_26, 31, 31) @[Configs.scala 14:43]
                  node _io_rd_fill_T_11 = bits(_io_rd_fill_T_10, 0, 0) @[Bitwise.scala 74:15]
                  node io_rd_fill_5 = mux(_io_rd_fill_T_11, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
                  node _io_rd_T_27 = cat(io_rd_fill_5, _io_rd_T_26) @[Cat.scala 31:58]
                  node _io_rd_T_28 = add(io.rj, _io_rd_T_27) @[ALU.scala 41:24]
                  node _io_rd_T_29 = tail(_io_rd_T_28, 1) @[ALU.scala 41:24]
                  io.rd <= _io_rd_T_29 @[ALU.scala 41:15]
                else :
                  node _T_14 = and(io.instruction, UInt<29>("h1fffc000")) @[ALU.scala 42:33]
                  node _T_15 = eq(UInt<16>("h8000"), _T_14) @[ALU.scala 42:33]
                  when _T_15 : @[ALU.scala 42:45]
                    node _io_rd_T_30 = bits(io.rj, 31, 0) @[ALU.scala 43:37]
                    node _io_rd_T_31 = bits(io.imm, 1, 0) @[ALU.scala 43:55]
                    node _io_rd_T_32 = add(_io_rd_T_31, UInt<1>("h1")) @[ALU.scala 43:62]
                    node _io_rd_T_33 = tail(_io_rd_T_32, 1) @[ALU.scala 43:62]
                    node _io_rd_T_34 = dshl(_io_rd_T_30, _io_rd_T_33) @[ALU.scala 43:45]
                    node _io_rd_T_35 = bits(io.rk, 31, 0) @[ALU.scala 43:77]
                    node _io_rd_T_36 = add(_io_rd_T_34, _io_rd_T_35) @[ALU.scala 43:70]
                    node _io_rd_T_37 = tail(_io_rd_T_36, 1) @[ALU.scala 43:70]
                    node _io_rd_fill_T_12 = bits(_io_rd_T_37, 34, 34) @[Configs.scala 14:43]
                    node _io_rd_fill_T_13 = bits(_io_rd_fill_T_12, 0, 0) @[Bitwise.scala 74:15]
                    node io_rd_fill_6 = mux(_io_rd_fill_T_13, UInt<29>("h1fffffff"), UInt<29>("h0")) @[Bitwise.scala 74:12]
                    node _io_rd_T_38 = cat(io_rd_fill_6, _io_rd_T_37) @[Cat.scala 31:58]
                    io.rd <= _io_rd_T_38 @[ALU.scala 43:15]
                  else :
                    node _T_16 = and(io.instruction, UInt<29>("h1fffc000")) @[ALU.scala 44:33]
                    node _T_17 = eq(UInt<16>("hc000"), _T_16) @[ALU.scala 44:33]
                    when _T_17 : @[ALU.scala 44:46]
                      node _io_rd_T_39 = bits(io.rj, 31, 0) @[ALU.scala 45:39]
                      node _io_rd_T_40 = bits(io.imm, 1, 0) @[ALU.scala 45:57]
                      node _io_rd_T_41 = add(_io_rd_T_40, UInt<1>("h1")) @[ALU.scala 45:64]
                      node _io_rd_T_42 = tail(_io_rd_T_41, 1) @[ALU.scala 45:64]
                      node _io_rd_T_43 = dshl(_io_rd_T_39, _io_rd_T_42) @[ALU.scala 45:47]
                      node _io_rd_T_44 = bits(io.rk, 31, 0) @[ALU.scala 45:79]
                      node _io_rd_T_45 = add(_io_rd_T_43, _io_rd_T_44) @[ALU.scala 45:72]
                      node _io_rd_T_46 = tail(_io_rd_T_45, 1) @[ALU.scala 45:72]
                      node io_rd_fill_7 = mux(UInt<1>("h0"), UInt<29>("h1fffffff"), UInt<29>("h0")) @[Bitwise.scala 74:12]
                      node _io_rd_T_47 = cat(io_rd_fill_7, _io_rd_T_46) @[Cat.scala 31:58]
                      io.rd <= _io_rd_T_47 @[ALU.scala 45:15]
                    else :
                      node _T_18 = and(io.instruction, UInt<29>("h1fff8000")) @[ALU.scala 46:33]
                      node _T_19 = eq(UInt<19>("h58000"), _T_18) @[ALU.scala 46:33]
                      when _T_19 : @[ALU.scala 46:45]
                        node _io_rd_T_48 = bits(io.imm, 1, 0) @[ALU.scala 47:35]
                        node _io_rd_T_49 = add(_io_rd_T_48, UInt<1>("h1")) @[ALU.scala 47:42]
                        node _io_rd_T_50 = tail(_io_rd_T_49, 1) @[ALU.scala 47:42]
                        node _io_rd_T_51 = dshl(io.rj, _io_rd_T_50) @[ALU.scala 47:25]
                        node _io_rd_T_52 = add(_io_rd_T_51, io.rk) @[ALU.scala 47:50]
                        node _io_rd_T_53 = tail(_io_rd_T_52, 1) @[ALU.scala 47:50]
                        io.rd <= _io_rd_T_53 @[ALU.scala 47:15]
                      else :
                        node _T_20 = and(io.instruction, UInt<29>("h1fc00000")) @[ALU.scala 48:33]
                        node _T_21 = eq(UInt<26>("h2800000"), _T_20) @[ALU.scala 48:33]
                        when _T_21 : @[ALU.scala 48:46]
                          node _io_rd_T_54 = bits(io.imm, 19, 0) @[ALU.scala 49:41]
                          node _io_rd_T_55 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 74:12]
                          node _io_rd_T_56 = cat(_io_rd_T_54, _io_rd_T_55) @[Cat.scala 31:58]
                          node _io_rd_fill_T_14 = bits(_io_rd_T_56, 31, 31) @[Configs.scala 14:43]
                          node _io_rd_fill_T_15 = bits(_io_rd_fill_T_14, 0, 0) @[Bitwise.scala 74:15]
                          node io_rd_fill_8 = mux(_io_rd_fill_T_15, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
                          node _io_rd_T_57 = cat(io_rd_fill_8, _io_rd_T_56) @[Cat.scala 31:58]
                          io.rd <= _io_rd_T_57 @[ALU.scala 49:15]
                        else :
                          node _T_22 = and(io.instruction, UInt<29>("h1fc00000")) @[ALU.scala 50:33]
                          node _T_23 = eq(UInt<26>("h2c00000"), _T_22) @[ALU.scala 50:33]
                          when _T_23 : @[ALU.scala 50:46]
                            node _io_rd_T_58 = bits(io.imm, 19, 0) @[ALU.scala 51:41]
                            node _io_rd_fill_T_16 = bits(_io_rd_T_58, 19, 19) @[Configs.scala 14:43]
                            node _io_rd_fill_T_17 = bits(_io_rd_fill_T_16, 0, 0) @[Bitwise.scala 74:15]
                            node io_rd_fill_9 = mux(_io_rd_fill_T_17, UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 74:12]
                            node _io_rd_T_59 = cat(io_rd_fill_9, _io_rd_T_58) @[Cat.scala 31:58]
                            node _io_rd_T_60 = bits(io.rd_in, 31, 0) @[ALU.scala 51:73]
                            node _io_rd_T_61 = cat(_io_rd_T_59, _io_rd_T_60) @[Cat.scala 31:58]
                            io.rd <= _io_rd_T_61 @[ALU.scala 51:15]
                          else :
                            node _T_24 = and(io.instruction, UInt<29>("h1ff80000")) @[ALU.scala 52:33]
                            node _T_25 = eq(UInt<23>("h600000"), _T_24) @[ALU.scala 52:33]
                            when _T_25 : @[ALU.scala 52:46]
                              node _io_rd_T_62 = bits(io.imm, 11, 0) @[ALU.scala 53:28]
                              node _io_rd_T_63 = bits(io.rj, 51, 0) @[ALU.scala 53:42]
                              node _io_rd_T_64 = cat(_io_rd_T_62, _io_rd_T_63) @[Cat.scala 31:58]
                              io.rd <= _io_rd_T_64 @[ALU.scala 53:15]

