// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PCreg(	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
  input         clk,	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
                resetn,	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
                br_bus_valid,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
  input  [31:0] br_bus_pc_target,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
  output [31:0] pc,	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
                next_pc	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
);

  reg  [31:0] pc_reg;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
  wire [31:0] _next_pc_T = pc_reg + 32'h4;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25, :22:68
  always @(posedge clk) begin	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    if (resetn)	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      pc_reg <= 32'h1BFFFFFC;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
    else if (br_bus_valid)	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
      pc_reg <= br_bus_pc_target;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25
    else	// src/main/scala/CPU/IFstage/PCreg.scala:19:16
      pc_reg <= _next_pc_T;	// src/main/scala/CPU/IFstage/PCreg.scala:21:25, :22:68
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
        pc_reg = _RANDOM[/*Zero width*/ 1'b0];	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :21:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/PCreg.scala:18:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign pc = pc_reg;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :21:25
  assign next_pc = br_bus_valid ? br_bus_pc_target : _next_pc_T;	// src/main/scala/CPU/IFstage/PCreg.scala:18:7, :22:{22,68}
endmodule

module IFtop(	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  input         clk,	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
                resetn,	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
  output        hand_shake_af_valid_out,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [31:0] hand_shake_af_bus_out_pc,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                hand_shake_af_bus_out_inst,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input         br_bus_valid,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  input  [31:0] br_bus_pc_target,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
                inst_sram_rdata,	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
  output [31:0] inst_sram_addr	// src/main/scala/CPU/IFstage/IFtop.scala:28:16
);

  reg valid;	// src/main/scala/CPU/IFstage/IFtop.scala:32:24
  always @(posedge clk) begin	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    if (resetn)	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      valid <= 1'h0;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, :32:24
    else	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      valid <= 1'h1;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, :32:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
        valid = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, :32:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  PCreg pc_reg (	// src/main/scala/CPU/IFstage/IFtop.scala:44:24
    .clk               (clk),
    .resetn               (reset),
    .br_bus_valid     (br_bus_valid),
    .br_bus_pc_target (br_bus_pc_target),
    .pc               (hand_shake_af_bus_out_pc),
    .next_pc          (inst_sram_addr)
  );
  assign hand_shake_af_valid_out = valid;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7, :32:24
  assign hand_shake_af_bus_out_inst = inst_sram_rdata;	// src/main/scala/CPU/IFstage/IFtop.scala:27:7
endmodule

module Reg(	// src/main/scala/CPU/IDstage/Reg.scala:20:7
  input         clk,	// src/main/scala/CPU/IDstage/Reg.scala:20:7
                resetn,	// src/main/scala/CPU/IDstage/Reg.scala:20:7
  input  [4:0]  raddr1,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
                raddr2,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
  output [63:0] rdata1,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
                rdata2,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
  input         rf_bus_valid,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
  input  [4:0]  rf_bus_waddr,	// src/main/scala/CPU/IDstage/Reg.scala:21:16
  input  [63:0] rf_bus_wdata	// src/main/scala/CPU/IDstage/Reg.scala:21:16
);

  reg  [31:0]       reg_0;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_1;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_2;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_3;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_4;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_5;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_6;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_7;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_8;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_9;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_10;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_11;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_12;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_13;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_14;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_15;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_16;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_17;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_18;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_19;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_20;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_21;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_22;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_23;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_24;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_25;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_26;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_27;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_28;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_29;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_30;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  reg  [31:0]       reg_31;	// src/main/scala/CPU/IDstage/Reg.scala:23:22
  wire [31:0][31:0] _GEN =
    {{reg_31},
     {reg_30},
     {reg_29},
     {reg_28},
     {reg_27},
     {reg_26},
     {reg_25},
     {reg_24},
     {reg_23},
     {reg_22},
     {reg_21},
     {reg_20},
     {reg_19},
     {reg_18},
     {reg_17},
     {reg_16},
     {reg_15},
     {reg_14},
     {reg_13},
     {reg_12},
     {reg_11},
     {reg_10},
     {reg_9},
     {reg_8},
     {reg_7},
     {reg_6},
     {reg_5},
     {reg_4},
     {reg_3},
     {reg_2},
     {reg_1},
     {reg_0}};	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :29:21
  always @(posedge clk) begin	// src/main/scala/CPU/IDstage/Reg.scala:20:7
    if (resetn) begin	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      reg_0 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_1 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_2 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_3 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_4 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_5 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_6 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_7 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_8 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_9 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_10 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_11 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_12 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_13 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_14 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_15 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_16 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_17 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_18 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_19 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_20 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_21 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_22 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_23 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_24 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_25 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_26 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_27 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_28 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_29 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_30 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
      reg_31 <= 32'h0;	// src/main/scala/CPU/IDstage/Reg.scala:23:{22,30}
    end
    else begin	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      automatic logic _GEN_0 = rf_bus_valid & (|rf_bus_waddr);	// src/main/scala/CPU/IDstage/Reg.scala:25:{26,45}
      if (_GEN_0 & ~(|rf_bus_waddr))	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :25:{26,45,54}, :26:30
        reg_0 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_1 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h2)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_2 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h3)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_3 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h4)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_4 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h5)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_5 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h6)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_6 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h7)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_7 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h8)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_8 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h9)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_9 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hA)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_10 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hB)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_11 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hC)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_12 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hD)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_13 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hE)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_14 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'hF)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_15 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h10)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_16 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h11)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_17 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h12)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_18 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h13)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_19 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h14)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_20 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h15)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_21 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h16)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_22 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h17)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_23 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h18)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_24 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h19)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_25 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1A)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_26 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1B)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_27 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1C)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_28 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1D)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_29 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & rf_bus_waddr == 5'h1E)	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22, :25:{26,54}, :26:30
        reg_30 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
      if (_GEN_0 & (&rf_bus_waddr))	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :25:{26,54}, :26:30
        reg_31 <= rf_bus_wdata[31:0];	// src/main/scala/CPU/IDstage/Reg.scala:23:22, :26:30
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IDstage/Reg.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IDstage/Reg.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      automatic logic [31:0] _RANDOM[0:31];	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IDstage/Reg.scala:20:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IDstage/Reg.scala:20:7
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;	// src/main/scala/CPU/IDstage/Reg.scala:20:7
        end	// src/main/scala/CPU/IDstage/Reg.scala:20:7
        reg_0 = _RANDOM[5'h0];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_1 = _RANDOM[5'h1];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_2 = _RANDOM[5'h2];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_3 = _RANDOM[5'h3];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_4 = _RANDOM[5'h4];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_5 = _RANDOM[5'h5];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_6 = _RANDOM[5'h6];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_7 = _RANDOM[5'h7];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_8 = _RANDOM[5'h8];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_9 = _RANDOM[5'h9];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_10 = _RANDOM[5'hA];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_11 = _RANDOM[5'hB];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_12 = _RANDOM[5'hC];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_13 = _RANDOM[5'hD];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_14 = _RANDOM[5'hE];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_15 = _RANDOM[5'hF];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_16 = _RANDOM[5'h10];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_17 = _RANDOM[5'h11];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_18 = _RANDOM[5'h12];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_19 = _RANDOM[5'h13];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_20 = _RANDOM[5'h14];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_21 = _RANDOM[5'h15];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_22 = _RANDOM[5'h16];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_23 = _RANDOM[5'h17];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_24 = _RANDOM[5'h18];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_25 = _RANDOM[5'h19];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_26 = _RANDOM[5'h1A];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_27 = _RANDOM[5'h1B];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_28 = _RANDOM[5'h1C];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_29 = _RANDOM[5'h1D];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_30 = _RANDOM[5'h1E];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
        reg_31 = _RANDOM[5'h1F];	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IDstage/Reg.scala:20:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IDstage/Reg.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign rdata1 = {32'h0, raddr1 == 5'h0 ? 32'h0 : _GEN[raddr1]};	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:30, :29:{15,21,32}
  assign rdata2 = {32'h0, raddr2 == 5'h0 ? 32'h0 : _GEN[raddr2]};	// src/main/scala/CPU/IDstage/Reg.scala:20:7, :23:30, :29:21, :30:{15,21,32}
endmodule

module IDtop(	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
  input         clk,	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
                resetn,	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
                hand_shake_bf_valid_out,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  input  [31:0] hand_shake_bf_bus_out_pc,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
                hand_shake_bf_bus_out_inst,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output        hand_shake_af_valid_out,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [31:0] hand_shake_af_bus_out_pc,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [1:0]  hand_shake_af_bus_out_func_type,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [9:0]  hand_shake_af_bus_out_op_type,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [63:0] hand_shake_af_bus_out_src1,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
                hand_shake_af_bus_out_src2,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output        hand_shake_af_bus_out_rf_bus_valid,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [4:0]  hand_shake_af_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  input         rf_bus_valid,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  input  [4:0]  rf_bus_waddr,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  input  [63:0] rf_bus_wdata,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output        br_bus_valid,	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
  output [31:0] br_bus_pc_target	// src/main/scala/CPU/IDstage/IDtop.scala:24:16
);

  wire [63:0] _reg_rdata1;	// src/main/scala/CPU/IDstage/IDtop.scala:62:21
  wire [63:0] _reg_rdata2;	// src/main/scala/CPU/IDstage/IDtop.scala:62:21
  reg         valid;	// src/main/scala/CPU/IDstage/IDtop.scala:28:24
  wire [31:0] bus_pc = hand_shake_bf_valid_out ? hand_shake_bf_bus_out_pc : 32'h0;	// src/main/scala/CPU/IDstage/IDtop.scala:27:{23,36}, :35:68, :36:13
  wire        _GEN = hand_shake_bf_bus_out_inst[31:15] == 17'h20;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_0 = hand_shake_bf_bus_out_inst[31:15] == 17'h22;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_1 = hand_shake_bf_bus_out_inst[31:15] == 17'h24;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_2 = hand_shake_bf_bus_out_inst[31:15] == 17'h25;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_3 = hand_shake_bf_bus_out_inst[31:15] == 17'h28;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_4 = hand_shake_bf_bus_out_inst[31:15] == 17'h29;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_5 = hand_shake_bf_bus_out_inst[31:15] == 17'h2A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_6 = hand_shake_bf_bus_out_inst[31:22] == 10'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_7 = hand_shake_bf_bus_out_inst[31:15] == 17'h2B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_8 = hand_shake_bf_bus_out_inst[31:15] == 17'h81;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_9 = hand_shake_bf_bus_out_inst[31:15] == 17'h89;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_10 = hand_shake_bf_bus_out_inst[31:15] == 17'h91;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_11 = hand_shake_bf_bus_out_inst[31:22] == 10'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_12 = hand_shake_bf_bus_out_inst[31:22] == 10'hA2;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_13 = hand_shake_bf_bus_out_inst[31:22] == 10'hA6;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_14 = hand_shake_bf_bus_out_inst[31:26] == 6'hD;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_15 = hand_shake_bf_bus_out_inst[31:26] == 6'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_16 = hand_shake_bf_bus_out_inst[31:26] == 6'hF;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_17 = hand_shake_bf_bus_out_inst[31:26] == 6'h10;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_18 = hand_shake_bf_bus_out_inst[31:26] == 6'h11;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_19 = hand_shake_bf_bus_out_inst[31:25] == 7'hA;	// src/main/scala/CPU/Parameters/parameters.scala:48:32, src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN_20 = _GEN_17 | _GEN_18;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_21 = _GEN_12 | _GEN_13;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire [6:0]  inst_type =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5
      ? 7'h3
      : _GEN_6
          ? 7'h1
          : _GEN_7
              ? 7'h3
              : _GEN_8 | _GEN_9 | _GEN_10
                  ? 7'h9
                  : _GEN_11 | _GEN_21
                      ? 7'h1
                      : _GEN_14
                          ? 7'h26
                          : _GEN_15 | _GEN_16
                              ? 7'h48
                              : {1'h0, _GEN_20 ? 6'h26 : {1'h0, _GEN_19 ? 5'h7 : 5'h1F}};	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_22 = _GEN_14 | ~_GEN_15 & (_GEN_16 | ~_GEN_17 & ~_GEN_18);	// src/main/scala/CPU/IDstage/IDtop.scala:27:36, :30:53, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire [25:0] imm =
    inst_type == 7'h10
      ? {4'h0, hand_shake_bf_bus_out_inst[31:10]}
      : inst_type == 7'hA
          ? {20'h0, hand_shake_bf_bus_out_inst[15:10]}
          : inst_type == 7'h9
              ? {21'h0, hand_shake_bf_bus_out_inst[14:10]}
              : inst_type == 7'h48
                  ? {hand_shake_bf_bus_out_inst[9:0],
                     hand_shake_bf_bus_out_inst[25:10]}
                  : {4'h0,
                     inst_type == 7'h7
                       ? hand_shake_bf_bus_out_inst[26:5]
                       : {6'h0,
                          inst_type == 7'h26
                            ? hand_shake_bf_bus_out_inst[25:10]
                            : {2'h0,
                               inst_type == 7'h5
                                 ? hand_shake_bf_bus_out_inst[23:10]
                                 : {2'h0,
                                    inst_type == 7'h1
                                      ? hand_shake_bf_bus_out_inst[21:10]
                                      : {4'h0,
                                         inst_type == 7'h0
                                           ? hand_shake_bf_bus_out_inst[17:10]
                                           : 8'h0}}}}};	// src/main/scala/CPU/IDstage/IDtop.scala:27:36, :45:25, :46:26, :47:26, :48:26, :49:26, :50:{25,30}, :51:26, :52:26, :53:26, src/main/scala/CPU/Parameters/parameters.scala:48:32, src/main/scala/chisel3/util/Lookup.scala:34:39
  always @(posedge clk) begin	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
    if (resetn)	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      valid <= 1'h0;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :28:24
    else	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      valid <= hand_shake_bf_valid_out;	// src/main/scala/CPU/IDstage/IDtop.scala:28:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
        valid = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :28:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IDstage/IDtop.scala:23:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Reg reg_0 (	// src/main/scala/CPU/IDstage/IDtop.scala:62:21
    .clk           (clk),
    .resetn           (reset),
    .raddr1       (hand_shake_bf_bus_out_inst[9:5]),	// src/main/scala/CPU/IDstage/IDtop.scala:57:18
    .raddr2
      (hand_shake_bf_bus_out_inst[31:26] == 6'h10
       | hand_shake_bf_bus_out_inst[31:26] == 6'h11
       | hand_shake_bf_bus_out_inst[31:22] == 10'hA6
         ? hand_shake_bf_bus_out_inst[4:0]
         : hand_shake_bf_bus_out_inst[14:10]),	// src/main/scala/CPU/IDstage/IDtop.scala:51:26, :59:18, :65:{25,32}, :66:32, :67:{24,32}, src/main/scala/chisel3/util/Lookup.scala:31:38
    .rdata1       (_reg_rdata1),
    .rdata2       (_reg_rdata2),
    .rf_bus_valid (rf_bus_valid),
    .rf_bus_waddr (rf_bus_waddr),
    .rf_bus_wdata (rf_bus_wdata)
  );
  assign hand_shake_af_valid_out = valid;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :28:24
  assign hand_shake_af_bus_out_pc = bus_pc;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :27:23, :35:68, :36:13
  assign hand_shake_af_bus_out_func_type =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8
    | _GEN_9 | _GEN_10 | _GEN_11
      ? 2'h1
      : _GEN_21 ? 2'h2 : {1'h0, _GEN_22};	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign hand_shake_af_bus_out_op_type =
    {4'h0,
     _GEN
       ? 6'h1
       : _GEN_0
           ? 6'h2
           : _GEN_1
               ? 6'h3
               : _GEN_2
                   ? 6'h4
                   : _GEN_3
                       ? 6'h6
                       : _GEN_4
                           ? 6'h5
                           : _GEN_5 | _GEN_6
                               ? 6'h7
                               : _GEN_7
                                   ? 6'h8
                                   : _GEN_8
                                       ? 6'h9
                                       : _GEN_9
                                           ? 6'hA
                                           : _GEN_10
                                               ? 6'hB
                                               : _GEN_11
                                                   ? 6'h1
                                                   : _GEN_12
                                                       ? 6'h0
                                                       : _GEN_13 | _GEN_14
                                                           ? 6'h1
                                                           : _GEN_15
                                                               ? 6'h0
                                                               : _GEN_16
                                                                   ? 6'h1
                                                                   : _GEN_20
                                                                       ? 6'h0
                                                                       : _GEN_19
                                                                           ? 6'hC
                                                                           : 6'h3F};	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :89:25, src/main/scala/CPU/Parameters/parameters.scala:48:32, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign hand_shake_af_bus_out_src1 = _reg_rdata1;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :62:21
  assign hand_shake_af_bus_out_src2 = _reg_rdata2;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :62:21
  assign hand_shake_af_bus_out_rf_bus_valid =
    _GEN | _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | _GEN_7 | _GEN_8
    | _GEN_9 | _GEN_10 | _GEN_11 | _GEN_12 | ~_GEN_13 & _GEN_22;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign hand_shake_af_bus_out_rf_bus_waddr =
    hand_shake_bf_bus_out_inst[31:26] == 6'hF
      ? 5'h1
      : hand_shake_bf_bus_out_inst[4:0];	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :59:18, :85:{24,30}, src/main/scala/chisel3/util/Lookup.scala:31:38
  assign br_bus_valid = |(inst_type[6:5]);	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, src/main/scala/CPU/ISA.scala:27:50, :28:61, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign br_bus_pc_target =
    inst_type[6:5] == 2'h2
      ? bus_pc + {{4{imm[25]}}, imm, 2'h0}
      : inst_type[6:5] == 2'h1
          ? (hand_shake_bf_bus_out_inst[31:26] == 6'hD
               ? _reg_rdata1[31:0] + {{4{imm[25]}}, imm, 2'h0}
               : hand_shake_bf_bus_out_inst[31:26] == 6'h10
                 & _reg_rdata1 == _reg_rdata2
                 | hand_shake_bf_bus_out_inst[31:26] == 6'h11
                 & _reg_rdata1 != _reg_rdata2
                   ? bus_pc + {6'h0, imm}
                   : 32'h0)
          : 32'h0;	// src/main/scala/CPU/IDstage/IDtop.scala:23:7, :27:{23,36}, :35:68, :36:13, :62:21, :75:{19,55}, :76:{19,40,52,77}, :77:{19,40,52}, :79:35, src/main/scala/CPU/ISA.scala:27:50, src/main/scala/CPU/Parameters/parameters.scala:48:32, :52:24, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39, src/main/scala/chisel3/util/Mux.scala:126:16
endmodule

module Alu(	// src/main/scala/CPU/IEstage/Alu.scala:18:7
  input  [5:0]  alu_op,	// src/main/scala/CPU/IEstage/Alu.scala:19:16
  input  [63:0] alu_src1,	// src/main/scala/CPU/IEstage/Alu.scala:19:16
                alu_src2,	// src/main/scala/CPU/IEstage/Alu.scala:19:16
  output [63:0] alu_result	// src/main/scala/CPU/IEstage/Alu.scala:19:16
);

  wire [63:0] _alu_result_T_13 = alu_src1 | alu_src2;	// src/main/scala/CPU/IEstage/Alu.scala:27:45
  wire [94:0] _alu_result_T_16 = {31'h0, alu_src1} << alu_src2[4:0];	// src/main/scala/CPU/IEstage/Alu.scala:30:{56,70}
  wire [63:0] _alu_result_T_21 = alu_src1 >> alu_src2[4:0];	// src/main/scala/CPU/IEstage/Alu.scala:30:70, :31:56
  wire [95:0] _alu_result_T_27 =
    {{32{alu_src1[31]}}, alu_src1} >> alu_src2[4:0];	// src/main/scala/CPU/IEstage/Alu.scala:30:70, :32:{34,39,55,75}
  assign alu_result =
    alu_op == 6'hC
      ? {alu_src2[51:0], 12'h0}
      : alu_op == 6'hB
          ? {32'h0, _alu_result_T_27[31:0]}
          : alu_op == 6'hA
              ? {32'h0, _alu_result_T_21[31:0]}
              : alu_op == 6'h9
                  ? {32'h0, _alu_result_T_16[31:0]}
                  : alu_op == 6'h8
                      ? alu_src1 ^ alu_src2
                      : alu_op == 6'h7
                          ? _alu_result_T_13
                          : alu_op == 6'h6
                              ? ~_alu_result_T_13
                              : alu_op == 6'h5
                                  ? alu_src1 & alu_src2
                                  : alu_op == 6'h4
                                      ? {63'h0, alu_src1 < alu_src2}
                                      : alu_op == 6'h3
                                          ? {63'h0,
                                             $signed(alu_src1) < $signed(alu_src2)}
                                          : alu_op == 6'h2
                                              ? alu_src1 - alu_src2
                                              : alu_op == 6'h1
                                                  ? alu_src1 + alu_src2
                                                  : 64'h0;	// src/main/scala/CPU/IEstage/Alu.scala:18:7, :22:43, :23:43, :24:54, :25:47, :26:43, :27:{31,45}, :29:43, :30:{56,90}, :31:{56,90}, :32:{39,75,98}, :33:47, src/main/scala/CPU/Parameters/parameters.scala:48:32, :53:27
endmodule

module IEtop(	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
  input         clk,	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
                resetn,	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
                hand_shake_bf_valid_out,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input  [31:0] hand_shake_bf_bus_out_pc,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input  [1:0]  hand_shake_bf_bus_out_func_type,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input  [9:0]  hand_shake_bf_bus_out_op_type,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input  [63:0] hand_shake_bf_bus_out_src1,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
                hand_shake_bf_bus_out_src2,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input         hand_shake_bf_bus_out_rf_bus_valid,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  input  [4:0]  hand_shake_bf_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output        hand_shake_af_valid_out,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [31:0] hand_shake_af_bus_out_pc,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [1:0]  hand_shake_af_bus_out_func_type,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [9:0]  hand_shake_af_bus_out_op_type,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output        hand_shake_af_bus_out_rf_bus_valid,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [4:0]  hand_shake_af_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [63:0] hand_shake_af_bus_out_result,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [3:0]  data_sram_we,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
  output [31:0] data_sram_addr,	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
                data_sram_wdata	// src/main/scala/CPU/IEstage/IEtop.scala:24:16
);

  wire [63:0] _alu_alu_result;	// src/main/scala/CPU/IEstage/IEtop.scala:40:21
  reg         valid;	// src/main/scala/CPU/IEstage/IEtop.scala:28:24
  wire [9:0]  bus_op_type =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_op_type : 10'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:27:{23,36}, :35:68, :36:13
  wire [1:0]  bus_func_type =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_func_type : 2'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:27:{23,36}, :35:68, :36:13
  wire        _GEN = bus_func_type == 2'h1;	// src/main/scala/CPU/IEstage/IEtop.scala:27:23, :35:68, :36:13, :44:25
  wire        _GEN_0 = _GEN & hand_shake_bf_valid_out;	// src/main/scala/CPU/IEstage/IEtop.scala:42:21, :44:{25,43}, :46:25
  always @(posedge clk) begin	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
    if (resetn)	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      valid <= 1'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :28:24
    else	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      valid <= hand_shake_bf_valid_out;	// src/main/scala/CPU/IEstage/IEtop.scala:28:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
        valid = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :28:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IEstage/IEtop.scala:23:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Alu alu (	// src/main/scala/CPU/IEstage/IEtop.scala:40:21
    .alu_op     (_GEN ? bus_op_type[5:0] : 6'h3F),	// src/main/scala/CPU/IEstage/IEtop.scala:27:23, :35:68, :36:13, :41:21, :44:{25,43}, :45:23
    .alu_src1   (_GEN_0 ? hand_shake_bf_bus_out_src1 : 64'h0),	// src/main/scala/CPU/IEstage/IEtop.scala:27:36, :42:21, :44:43, :46:25
    .alu_src2   (_GEN_0 ? hand_shake_bf_bus_out_src2 : 64'h0),	// src/main/scala/CPU/IEstage/IEtop.scala:27:36, :42:21, :43:21, :44:43, :46:25, :47:25
    .alu_result (_alu_alu_result)
  );
  assign hand_shake_af_valid_out = valid;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :28:24
  assign hand_shake_af_bus_out_pc =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_pc : 32'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:{23,36}, :35:68, :36:13
  assign hand_shake_af_bus_out_func_type = bus_func_type;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:23, :35:68, :36:13
  assign hand_shake_af_bus_out_op_type = bus_op_type;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:23, :35:68, :36:13
  assign hand_shake_af_bus_out_rf_bus_valid =
    hand_shake_bf_valid_out & hand_shake_bf_bus_out_rf_bus_valid;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:23, :35:68, :36:13
  assign hand_shake_af_bus_out_rf_bus_waddr =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_rf_bus_waddr : 5'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:{23,36}, :35:68, :36:13
  assign hand_shake_af_bus_out_result = _alu_alu_result;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :40:21
  assign data_sram_we =
    {1'h0,
     bus_func_type == 2'h2 & bus_op_type == 10'h1 & hand_shake_bf_valid_out,
     2'h0};	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :27:{23,36}, :35:68, :36:13, :55:{21,42}, :56:40, :58:25
  assign data_sram_addr = _alu_alu_result[31:0];	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :40:21, :59:23
  assign data_sram_wdata =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_src2[31:0] : 32'h0;	// src/main/scala/CPU/IEstage/IEtop.scala:23:7, :24:16, :27:{23,36}, :35:68, :36:13
endmodule

module IMtop(	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
  input         clk,	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
                resetn,	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
                hand_shake_bf_valid_out,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [31:0] hand_shake_bf_bus_out_pc,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [1:0]  hand_shake_bf_bus_out_func_type,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [9:0]  hand_shake_bf_bus_out_op_type,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input         hand_shake_bf_bus_out_rf_bus_valid,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [4:0]  hand_shake_bf_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [63:0] hand_shake_bf_bus_out_result,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  output        hand_shake_af_valid_out,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  output [31:0] hand_shake_af_bus_out_pc,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  output        hand_shake_af_bus_out_rf_bus_valid,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  output [4:0]  hand_shake_af_bus_out_rf_bus_waddr,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  output [63:0] hand_shake_af_bus_out_result,	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
  input  [31:0] data_sram_rdata	// src/main/scala/CPU/IMstage/IMtop.scala:21:16
);

  reg valid;	// src/main/scala/CPU/IMstage/IMtop.scala:25:24
  always @(posedge clk) begin	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
    if (resetn)	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      valid <= 1'h0;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :25:24
    else	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      valid <= hand_shake_bf_valid_out;	// src/main/scala/CPU/IMstage/IMtop.scala:25:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
        valid = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :25:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/CPU/IMstage/IMtop.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign hand_shake_af_valid_out = valid;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :25:24
  assign hand_shake_af_bus_out_pc =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_pc : 32'h0;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :24:{23,36}, :32:68, :33:13
  assign hand_shake_af_bus_out_rf_bus_valid =
    hand_shake_bf_valid_out & hand_shake_bf_bus_out_rf_bus_valid;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :24:23, :32:68, :33:13
  assign hand_shake_af_bus_out_rf_bus_waddr =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_rf_bus_waddr : 5'h0;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :24:{23,36}, :32:68, :33:13
  assign hand_shake_af_bus_out_result =
    (hand_shake_bf_valid_out ? hand_shake_bf_bus_out_func_type : 2'h0) == 2'h2
    & (hand_shake_bf_valid_out ? hand_shake_bf_bus_out_op_type : 10'h0) == 10'h0
      ? {32'h0, data_sram_rdata}
      : hand_shake_bf_valid_out ? hand_shake_bf_bus_out_result : 64'h0;	// src/main/scala/CPU/IMstage/IMtop.scala:20:7, :24:{23,36}, :32:68, :33:13, :38:{24,41,56,76}, :39:28
endmodule

module IWtop(	// src/main/scala/CPU/WBstage/IWtop.scala:26:7
  input         hand_shake_bf_valid_out,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  input  [31:0] hand_shake_bf_bus_out_pc,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  input         hand_shake_bf_bus_out_rf_bus_valid,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  input  [4:0]  hand_shake_bf_bus_out_rf_bus_waddr,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  input  [63:0] hand_shake_bf_bus_out_result,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [31:0] debug_wb_pc,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [3:0]  debug_wb_rf_we,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [4:0]  debug_wb_rf_wnum,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [31:0] debug_wb_rf_wdata,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output        rf_bus_valid,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [4:0]  rf_bus_waddr,	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
  output [63:0] rf_bus_wdata	// src/main/scala/CPU/WBstage/IWtop.scala:27:16
);

  wire [63:0] bus_result =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_result : 64'h0;	// src/main/scala/CPU/WBstage/IWtop.scala:30:{23,36}, :38:68, :39:13
  wire [4:0]  bus_rf_bus_waddr =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_rf_bus_waddr : 5'h0;	// src/main/scala/CPU/WBstage/IWtop.scala:30:{23,36}, :38:68, :39:13
  wire        rf_bus_valid_0 =
    hand_shake_bf_valid_out & hand_shake_bf_bus_out_rf_bus_valid;	// src/main/scala/CPU/WBstage/IWtop.scala:44:40
  assign debug_wb_pc =
    hand_shake_bf_valid_out ? hand_shake_bf_bus_out_pc : 32'h0;	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :30:{23,36}, :38:68, :39:13
  assign debug_wb_rf_we = {4{rf_bus_valid_0}};	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :44:40, :50:30
  assign debug_wb_rf_wnum = bus_rf_bus_waddr;	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :30:23, :38:68, :39:13
  assign debug_wb_rf_wdata = bus_result[31:0];	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :30:23, :38:68, :39:13, :52:26
  assign rf_bus_valid = rf_bus_valid_0;	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :44:40
  assign rf_bus_waddr = bus_rf_bus_waddr;	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :30:23, :38:68, :39:13
  assign rf_bus_wdata = bus_result;	// src/main/scala/CPU/WBstage/IWtop.scala:26:7, :30:23, :38:68, :39:13
endmodule

module mycpu_top(	// src/main/scala/CPU/Top.scala:31:7
  input         clk,	// src/main/scala/CPU/Top.scala:31:7
                resetn,	// src/main/scala/CPU/Top.scala:31:7
  output        inst_sram_en,	// src/main/scala/CPU/Top.scala:32:16
  output [3:0]  inst_sram_we,	// src/main/scala/CPU/Top.scala:32:16
  output [31:0] inst_sram_addr,	// src/main/scala/CPU/Top.scala:32:16
                inst_sram_wdata,	// src/main/scala/CPU/Top.scala:32:16
  input  [31:0] inst_sram_rdata,	// src/main/scala/CPU/Top.scala:32:16
  output        data_sram_en,	// src/main/scala/CPU/Top.scala:32:16
  output [3:0]  data_sram_we,	// src/main/scala/CPU/Top.scala:32:16
  output [31:0] data_sram_addr,	// src/main/scala/CPU/Top.scala:32:16
                data_sram_wdata,	// src/main/scala/CPU/Top.scala:32:16
  input  [31:0] data_sram_rdata,	// src/main/scala/CPU/Top.scala:32:16
  output [31:0] debug_wb_pc,	// src/main/scala/CPU/Top.scala:32:16
  output [3:0]  debug_wb_rf_we,	// src/main/scala/CPU/Top.scala:32:16
  output [4:0]  debug_wb_rf_wnum,	// src/main/scala/CPU/Top.scala:32:16
  output [31:0] debug_wb_rf_wdata	// src/main/scala/CPU/Top.scala:32:16
);

  wire        _iwtop_rf_bus_valid;	// src/main/scala/CPU/Top.scala:38:23
  wire [4:0]  _iwtop_rf_bus_waddr;	// src/main/scala/CPU/Top.scala:38:23
  wire [63:0] _iwtop_rf_bus_wdata;	// src/main/scala/CPU/Top.scala:38:23
  wire        _imtop_hand_shake_af_valid_out;	// src/main/scala/CPU/Top.scala:37:23
  wire [31:0] _imtop_hand_shake_af_bus_out_pc;	// src/main/scala/CPU/Top.scala:37:23
  wire        _imtop_hand_shake_af_bus_out_rf_bus_valid;	// src/main/scala/CPU/Top.scala:37:23
  wire [4:0]  _imtop_hand_shake_af_bus_out_rf_bus_waddr;	// src/main/scala/CPU/Top.scala:37:23
  wire [63:0] _imtop_hand_shake_af_bus_out_result;	// src/main/scala/CPU/Top.scala:37:23
  wire        _ietop_hand_shake_af_valid_out;	// src/main/scala/CPU/Top.scala:36:23
  wire [31:0] _ietop_hand_shake_af_bus_out_pc;	// src/main/scala/CPU/Top.scala:36:23
  wire [1:0]  _ietop_hand_shake_af_bus_out_func_type;	// src/main/scala/CPU/Top.scala:36:23
  wire [9:0]  _ietop_hand_shake_af_bus_out_op_type;	// src/main/scala/CPU/Top.scala:36:23
  wire        _ietop_hand_shake_af_bus_out_rf_bus_valid;	// src/main/scala/CPU/Top.scala:36:23
  wire [4:0]  _ietop_hand_shake_af_bus_out_rf_bus_waddr;	// src/main/scala/CPU/Top.scala:36:23
  wire [63:0] _ietop_hand_shake_af_bus_out_result;	// src/main/scala/CPU/Top.scala:36:23
  wire        _idtop_hand_shake_af_valid_out;	// src/main/scala/CPU/Top.scala:35:23
  wire [31:0] _idtop_hand_shake_af_bus_out_pc;	// src/main/scala/CPU/Top.scala:35:23
  wire [1:0]  _idtop_hand_shake_af_bus_out_func_type;	// src/main/scala/CPU/Top.scala:35:23
  wire [9:0]  _idtop_hand_shake_af_bus_out_op_type;	// src/main/scala/CPU/Top.scala:35:23
  wire [63:0] _idtop_hand_shake_af_bus_out_src1;	// src/main/scala/CPU/Top.scala:35:23
  wire [63:0] _idtop_hand_shake_af_bus_out_src2;	// src/main/scala/CPU/Top.scala:35:23
  wire        _idtop_hand_shake_af_bus_out_rf_bus_valid;	// src/main/scala/CPU/Top.scala:35:23
  wire [4:0]  _idtop_hand_shake_af_bus_out_rf_bus_waddr;	// src/main/scala/CPU/Top.scala:35:23
  wire        _idtop_br_bus_valid;	// src/main/scala/CPU/Top.scala:35:23
  wire [31:0] _idtop_br_bus_pc_target;	// src/main/scala/CPU/Top.scala:35:23
  wire        _iftop_hand_shake_af_valid_out;	// src/main/scala/CPU/Top.scala:34:23
  wire [31:0] _iftop_hand_shake_af_bus_out_pc;	// src/main/scala/CPU/Top.scala:34:23
  wire [31:0] _iftop_hand_shake_af_bus_out_inst;	// src/main/scala/CPU/Top.scala:34:23
reg reset;
 always @(posedge clk) reset <= ~resetn;
  IFtop iftop (	// src/main/scala/CPU/Top.scala:34:23
    .clk                         (clk),
    .resetn                         (reset),
    .hand_shake_af_valid_out    (_iftop_hand_shake_af_valid_out),
    .hand_shake_af_bus_out_pc   (_iftop_hand_shake_af_bus_out_pc),
    .hand_shake_af_bus_out_inst (_iftop_hand_shake_af_bus_out_inst),
    .br_bus_valid               (_idtop_br_bus_valid),	// src/main/scala/CPU/Top.scala:35:23
    .br_bus_pc_target           (_idtop_br_bus_pc_target),	// src/main/scala/CPU/Top.scala:35:23
    .inst_sram_rdata            (inst_sram_rdata),
    .inst_sram_addr             (inst_sram_addr)
  );
  IDtop idtop (	// src/main/scala/CPU/Top.scala:35:23
    .clk                                 (clk),
    .resetn                                 (reset),
    .hand_shake_bf_valid_out            (_iftop_hand_shake_af_valid_out),	// src/main/scala/CPU/Top.scala:34:23
    .hand_shake_bf_bus_out_pc           (_iftop_hand_shake_af_bus_out_pc),	// src/main/scala/CPU/Top.scala:34:23
    .hand_shake_bf_bus_out_inst         (_iftop_hand_shake_af_bus_out_inst),	// src/main/scala/CPU/Top.scala:34:23
    .hand_shake_af_valid_out            (_idtop_hand_shake_af_valid_out),
    .hand_shake_af_bus_out_pc           (_idtop_hand_shake_af_bus_out_pc),
    .hand_shake_af_bus_out_func_type    (_idtop_hand_shake_af_bus_out_func_type),
    .hand_shake_af_bus_out_op_type      (_idtop_hand_shake_af_bus_out_op_type),
    .hand_shake_af_bus_out_src1         (_idtop_hand_shake_af_bus_out_src1),
    .hand_shake_af_bus_out_src2         (_idtop_hand_shake_af_bus_out_src2),
    .hand_shake_af_bus_out_rf_bus_valid (_idtop_hand_shake_af_bus_out_rf_bus_valid),
    .hand_shake_af_bus_out_rf_bus_waddr (_idtop_hand_shake_af_bus_out_rf_bus_waddr),
    .rf_bus_valid                       (_iwtop_rf_bus_valid),	// src/main/scala/CPU/Top.scala:38:23
    .rf_bus_waddr                       (_iwtop_rf_bus_waddr),	// src/main/scala/CPU/Top.scala:38:23
    .rf_bus_wdata                       (_iwtop_rf_bus_wdata),	// src/main/scala/CPU/Top.scala:38:23
    .br_bus_valid                       (_idtop_br_bus_valid),
    .br_bus_pc_target                   (_idtop_br_bus_pc_target)
  );
  IEtop ietop (	// src/main/scala/CPU/Top.scala:36:23
    .clk                                 (clk),
    .resetn                                 (reset),
    .hand_shake_bf_valid_out            (_idtop_hand_shake_af_valid_out),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_pc           (_idtop_hand_shake_af_bus_out_pc),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_func_type    (_idtop_hand_shake_af_bus_out_func_type),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_op_type      (_idtop_hand_shake_af_bus_out_op_type),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_src1         (_idtop_hand_shake_af_bus_out_src1),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_src2         (_idtop_hand_shake_af_bus_out_src2),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_rf_bus_valid (_idtop_hand_shake_af_bus_out_rf_bus_valid),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_bf_bus_out_rf_bus_waddr (_idtop_hand_shake_af_bus_out_rf_bus_waddr),	// src/main/scala/CPU/Top.scala:35:23
    .hand_shake_af_valid_out            (_ietop_hand_shake_af_valid_out),
    .hand_shake_af_bus_out_pc           (_ietop_hand_shake_af_bus_out_pc),
    .hand_shake_af_bus_out_func_type    (_ietop_hand_shake_af_bus_out_func_type),
    .hand_shake_af_bus_out_op_type      (_ietop_hand_shake_af_bus_out_op_type),
    .hand_shake_af_bus_out_rf_bus_valid (_ietop_hand_shake_af_bus_out_rf_bus_valid),
    .hand_shake_af_bus_out_rf_bus_waddr (_ietop_hand_shake_af_bus_out_rf_bus_waddr),
    .hand_shake_af_bus_out_result       (_ietop_hand_shake_af_bus_out_result),
    .data_sram_we                       (data_sram_we),
    .data_sram_addr                     (data_sram_addr),
    .data_sram_wdata                    (data_sram_wdata)
  );
  IMtop imtop (	// src/main/scala/CPU/Top.scala:37:23
    .clk                                 (clk),
    .resetn                                 (reset),
    .hand_shake_bf_valid_out            (_ietop_hand_shake_af_valid_out),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_pc           (_ietop_hand_shake_af_bus_out_pc),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_func_type    (_ietop_hand_shake_af_bus_out_func_type),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_op_type      (_ietop_hand_shake_af_bus_out_op_type),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_rf_bus_valid (_ietop_hand_shake_af_bus_out_rf_bus_valid),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_rf_bus_waddr (_ietop_hand_shake_af_bus_out_rf_bus_waddr),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_bf_bus_out_result       (_ietop_hand_shake_af_bus_out_result),	// src/main/scala/CPU/Top.scala:36:23
    .hand_shake_af_valid_out            (_imtop_hand_shake_af_valid_out),
    .hand_shake_af_bus_out_pc           (_imtop_hand_shake_af_bus_out_pc),
    .hand_shake_af_bus_out_rf_bus_valid (_imtop_hand_shake_af_bus_out_rf_bus_valid),
    .hand_shake_af_bus_out_rf_bus_waddr (_imtop_hand_shake_af_bus_out_rf_bus_waddr),
    .hand_shake_af_bus_out_result       (_imtop_hand_shake_af_bus_out_result),
    .data_sram_rdata                    (data_sram_rdata)
  );
  IWtop iwtop (	// src/main/scala/CPU/Top.scala:38:23
    .hand_shake_bf_valid_out            (_imtop_hand_shake_af_valid_out),	// src/main/scala/CPU/Top.scala:37:23
    .hand_shake_bf_bus_out_pc           (_imtop_hand_shake_af_bus_out_pc),	// src/main/scala/CPU/Top.scala:37:23
    .hand_shake_bf_bus_out_rf_bus_valid (_imtop_hand_shake_af_bus_out_rf_bus_valid),	// src/main/scala/CPU/Top.scala:37:23
    .hand_shake_bf_bus_out_rf_bus_waddr (_imtop_hand_shake_af_bus_out_rf_bus_waddr),	// src/main/scala/CPU/Top.scala:37:23
    .hand_shake_bf_bus_out_result       (_imtop_hand_shake_af_bus_out_result),	// src/main/scala/CPU/Top.scala:37:23
    .debug_wb_pc                        (debug_wb_pc),
    .debug_wb_rf_we                     (debug_wb_rf_we),
    .debug_wb_rf_wnum                   (debug_wb_rf_wnum),
    .debug_wb_rf_wdata                  (debug_wb_rf_wdata),
    .rf_bus_valid                       (_iwtop_rf_bus_valid),
    .rf_bus_waddr                       (_iwtop_rf_bus_waddr),
    .rf_bus_wdata                       (_iwtop_rf_bus_wdata)
  );
  assign inst_sram_en = 1'h1;	// src/main/scala/CPU/Top.scala:31:7, :34:23, :35:23, :36:23, :37:23, :38:23
  assign inst_sram_we = 4'h0;	// src/main/scala/CPU/Top.scala:31:7, :34:23
  assign inst_sram_wdata = 32'h0;	// src/main/scala/CPU/Top.scala:31:7, :34:23
  assign data_sram_en = 1'h1;	// src/main/scala/CPU/Top.scala:31:7, :34:23, :35:23, :36:23, :37:23, :38:23
endmodule

